#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApi.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Db")]
	public partial class DcDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGroupA_Position(GroupA_Position instance);
    partial void UpdateGroupA_Position(GroupA_Position instance);
    partial void DeleteGroupA_Position(GroupA_Position instance);
    partial void InsertGroupB_Zone(GroupB_Zone instance);
    partial void UpdateGroupB_Zone(GroupB_Zone instance);
    partial void DeleteGroupB_Zone(GroupB_Zone instance);
    partial void InsertGroupB_Position(GroupB_Position instance);
    partial void UpdateGroupB_Position(GroupB_Position instance);
    partial void DeleteGroupB_Position(GroupB_Position instance);
    #endregion
		
		public DcDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DcDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GroupA_Position> GroupA_Positions
		{
			get
			{
				return this.GetTable<GroupA_Position>();
			}
		}
		
		public System.Data.Linq.Table<GroupB_Zone> GroupB_Zones
		{
			get
			{
				return this.GetTable<GroupB_Zone>();
			}
		}
		
		public System.Data.Linq.Table<GroupB_Position> GroupB_Positions
		{
			get
			{
				return this.GetTable<GroupB_Position>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupA_Positions")]
	public partial class GroupA_Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private int _GroupB_PositionId;
		
		private EntityRef<GroupB_Position> _GroupB_Position;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnGroupB_PositionIdChanging(int value);
    partial void OnGroupB_PositionIdChanged();
    #endregion
		
		public GroupA_Position()
		{
			this._GroupB_Position = default(EntityRef<GroupB_Position>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupB_PositionId", DbType="Int NOT NULL")]
		public int GroupB_PositionId
		{
			get
			{
				return this._GroupB_PositionId;
			}
			set
			{
				if ((this._GroupB_PositionId != value))
				{
					if (this._GroupB_Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupB_PositionIdChanging(value);
					this.SendPropertyChanging();
					this._GroupB_PositionId = value;
					this.SendPropertyChanged("GroupB_PositionId");
					this.OnGroupB_PositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupB_Position_GroupA_Position", Storage="_GroupB_Position", ThisKey="GroupB_PositionId", OtherKey="Id", IsForeignKey=true)]
		public GroupB_Position GroupB_Position
		{
			get
			{
				return this._GroupB_Position.Entity;
			}
			set
			{
				GroupB_Position previousValue = this._GroupB_Position.Entity;
				if (((previousValue != value) 
							|| (this._GroupB_Position.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupB_Position.Entity = null;
						previousValue.GroupA_Positions.Remove(this);
					}
					this._GroupB_Position.Entity = value;
					if ((value != null))
					{
						value.GroupA_Positions.Add(this);
						this._GroupB_PositionId = value.Id;
					}
					else
					{
						this._GroupB_PositionId = default(int);
					}
					this.SendPropertyChanged("GroupB_Position");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupB_Zones")]
	public partial class GroupB_Zone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<GroupB_Position> _GroupB_Positions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public GroupB_Zone()
		{
			this._GroupB_Positions = new EntitySet<GroupB_Position>(new Action<GroupB_Position>(this.attach_GroupB_Positions), new Action<GroupB_Position>(this.detach_GroupB_Positions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupB_Zone_GroupB_Position", Storage="_GroupB_Positions", ThisKey="Id", OtherKey="ZoneId")]
		public EntitySet<GroupB_Position> GroupB_Positions
		{
			get
			{
				return this._GroupB_Positions;
			}
			set
			{
				this._GroupB_Positions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupB_Positions(GroupB_Position entity)
		{
			this.SendPropertyChanging();
			entity.GroupB_Zone = this;
		}
		
		private void detach_GroupB_Positions(GroupB_Position entity)
		{
			this.SendPropertyChanging();
			entity.GroupB_Zone = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupB_Positions")]
	public partial class GroupB_Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Phone;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private int _ZoneId;
		
		private EntitySet<GroupA_Position> _GroupA_Positions;
		
		private EntityRef<GroupB_Zone> _GroupB_Zone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnZoneIdChanging(int value);
    partial void OnZoneIdChanged();
    #endregion
		
		public GroupB_Position()
		{
			this._GroupA_Positions = new EntitySet<GroupA_Position>(new Action<GroupA_Position>(this.attach_GroupA_Positions), new Action<GroupA_Position>(this.detach_GroupA_Positions));
			this._GroupB_Zone = default(EntityRef<GroupB_Zone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneId", DbType="Int NOT NULL")]
		public int ZoneId
		{
			get
			{
				return this._ZoneId;
			}
			set
			{
				if ((this._ZoneId != value))
				{
					if (this._GroupB_Zone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZoneIdChanging(value);
					this.SendPropertyChanging();
					this._ZoneId = value;
					this.SendPropertyChanged("ZoneId");
					this.OnZoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupB_Position_GroupA_Position", Storage="_GroupA_Positions", ThisKey="Id", OtherKey="GroupB_PositionId")]
		public EntitySet<GroupA_Position> GroupA_Positions
		{
			get
			{
				return this._GroupA_Positions;
			}
			set
			{
				this._GroupA_Positions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupB_Zone_GroupB_Position", Storage="_GroupB_Zone", ThisKey="ZoneId", OtherKey="Id", IsForeignKey=true)]
		public GroupB_Zone GroupB_Zone
		{
			get
			{
				return this._GroupB_Zone.Entity;
			}
			set
			{
				GroupB_Zone previousValue = this._GroupB_Zone.Entity;
				if (((previousValue != value) 
							|| (this._GroupB_Zone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupB_Zone.Entity = null;
						previousValue.GroupB_Positions.Remove(this);
					}
					this._GroupB_Zone.Entity = value;
					if ((value != null))
					{
						value.GroupB_Positions.Add(this);
						this._ZoneId = value.Id;
					}
					else
					{
						this._ZoneId = default(int);
					}
					this.SendPropertyChanged("GroupB_Zone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupA_Positions(GroupA_Position entity)
		{
			this.SendPropertyChanging();
			entity.GroupB_Position = this;
		}
		
		private void detach_GroupA_Positions(GroupA_Position entity)
		{
			this.SendPropertyChanging();
			entity.GroupB_Position = null;
		}
	}
}
#pragma warning restore 1591
